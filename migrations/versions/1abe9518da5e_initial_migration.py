"""Initial migration

Revision ID: 1abe9518da5e
Revises: 
Create Date: 2024-04-22 20:32:37.796546

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '1abe9518da5e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('additional_cost')
    with op.batch_alter_table('airlines', schema=None) as batch_op:
        batch_op.alter_column('airline_name',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)

    with op.batch_alter_table('city', schema=None) as batch_op:
        batch_op.add_column(sa.Column('airport_code', sa.String(length=10), nullable=False))
        batch_op.alter_column('city_name',
               existing_type=mysql.VARCHAR(length=60),
               type_=sa.String(length=255),
               existing_nullable=False)

    with op.batch_alter_table('country', schema=None) as batch_op:
        batch_op.alter_column('country_name',
               existing_type=mysql.VARCHAR(length=60),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('UTC',
               existing_type=mysql.VARCHAR(length=3),
               type_=sa.String(length=10),
               existing_nullable=False)

    with op.batch_alter_table('flight', schema=None) as batch_op:
        batch_op.alter_column('data_lotu',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=False)

    with op.batch_alter_table('order', schema=None) as batch_op:
        batch_op.alter_column('full_price',
               existing_type=mysql.DECIMAL(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=False)

    with op.batch_alter_table('plane', schema=None) as batch_op:
        batch_op.alter_column('plane_name',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=255),
               existing_nullable=False)

    with op.batch_alter_table('role_users', schema=None) as batch_op:
        batch_op.drop_constraint('role_users_ibfk_1', type_='foreignkey')
        batch_op.drop_constraint('role_users_ibfk_2', type_='foreignkey')
        batch_op.create_foreign_key(None, 'role', ['user_id'], ['role_id'])
        batch_op.create_foreign_key(None, 'user', ['role_id'], ['user_id'])

    with op.batch_alter_table('ticket', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=mysql.DECIMAL(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('surname',
               existing_type=mysql.VARCHAR(length=60),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('phone_number',
               existing_type=mysql.VARCHAR(length=9),
               type_=sa.String(length=20),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(length=200),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=mysql.VARCHAR(length=200),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.create_unique_constraint(None, ['phone_number'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('password',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=200),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=200),
               existing_nullable=False)
        batch_op.alter_column('phone_number',
               existing_type=sa.String(length=20),
               type_=mysql.VARCHAR(length=9),
               nullable=True)
        batch_op.alter_column('surname',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=60),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=False)

    with op.batch_alter_table('ticket', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.Float(),
               type_=mysql.DECIMAL(precision=10, scale=2),
               existing_nullable=False)

    with op.batch_alter_table('role_users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('role_users_ibfk_2', 'role', ['role_id'], ['role_id'])
        batch_op.create_foreign_key('role_users_ibfk_1', 'user', ['user_id'], ['user_id'])

    with op.batch_alter_table('plane', schema=None) as batch_op:
        batch_op.alter_column('plane_name',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=False)

    with op.batch_alter_table('order', schema=None) as batch_op:
        batch_op.alter_column('full_price',
               existing_type=sa.Float(),
               type_=mysql.DECIMAL(precision=10, scale=2),
               existing_nullable=False)

    with op.batch_alter_table('flight', schema=None) as batch_op:
        batch_op.alter_column('data_lotu',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=False)

    with op.batch_alter_table('country', schema=None) as batch_op:
        batch_op.alter_column('UTC',
               existing_type=sa.String(length=10),
               type_=mysql.VARCHAR(length=3),
               existing_nullable=False)
        batch_op.alter_column('country_name',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=60),
               existing_nullable=False)

    with op.batch_alter_table('city', schema=None) as batch_op:
        batch_op.alter_column('city_name',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=60),
               existing_nullable=False)
        batch_op.drop_column('airport_code')

    with op.batch_alter_table('airlines', schema=None) as batch_op:
        batch_op.alter_column('airline_name',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=False)

    op.create_table('additional_cost',
    sa.Column('cost_id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('description', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('cost', mysql.DECIMAL(precision=8, scale=2), nullable=False),
    sa.PrimaryKeyConstraint('cost_id')
    )
    # ### end Alembic commands ###
